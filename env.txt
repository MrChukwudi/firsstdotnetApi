SQL Database Table Creation:

CREATE DATABASE DotNetCourseDatabase
GO
 
USE DotNetCourseDatabase
GO
 
CREATE SCHEMA TutorialAppSchema
GO
 
CREATE TABLE TutorialAppSchema.Computer(
    ComputerId INT IDENTITY(1,1) PRIMARY KEY,
    Motherboard NVARCHAR(50),
    CPUCores INT,
    HasWifi BIT,
    HasLTE BIT,
    ReleaseDate DATE,
    Price DECIMAL(18,4),
    VideoCard NVARCHAR(50)
);


UserName: sa

Password: SQLConnect1

connectionString = "Server=localhost;Database=DotNetCourseDatabase;Trusted_Connection=false;TrustServerCertificate=True;User Id=saPassword=SQLConnect1;"

//Adding Our Packages to our Project on Terminal :
1. Dapper: dotnet add package Dapper
2. Entity FrameWork: dotnet add package microsoft.entityframeworkcore
3. SQL Server: dotnet add package microsoft.data.sqlclient
3. EF-SQL Server => Tells EF that given the rigth ConnectionString, it should connect to SQLSeerver: dotnet add package microsoft.entityframeworkcore.sqlserver
4. EF-SQL Relational gives us the ability to set our Default Schema and not have to use DBO: dotnet add package microsoft.entityframeworkcore.Relational
5. microsoft ConfigurationBuilder: dotnet add package Microsoft.Extensions.Configuration
6. microsoft ConfigurationBuilder for Json: dotnet add package Microsoft.Extensions.Configuration.Json
7. To circumvent using System.Text.Json for serialization, we prefer Newtonsoft.JSON Package: dotnet add package Newtonsoft.JSON
8. For mapping our Models to Fields from External Data: dotnet add package AutoMapper
9. For working with JWT Tokens: dotnet add package Microsoft.AspNetCore.Authentication.JWTBearer
NB: Remember to run [dotnet restore] anytime you install new packages:



//Building Connection String for Windows:
string connectionString = "Server=localhost;Database=NameOfDatabase;TrustServerCertificate=true;Trusted_Connection=true;";

//Building Connectiong String for Mac and Linux:
string connectionString = "Server=localhost;Database=DotNetCourseDatabase;TrustedServerCertificate=false;User Id=sa;Password=SQLConnect1;";







USE master 
DROP DATABASE DotNetCourseDatabase

CREATE DATABASE DotNetCourseDatabase
GO
 
USE DotNetCourseDatabase
GO
 
CREATE SCHEMA TutorialAppSchema
GO
 
CREATE TABLE TutorialAppSchema.Computer(
    ComputerId INT IDENTITY(1,1) PRIMARY KEY,
    Motherboard NVARCHAR(50),
    CPUCores INT,
    HasWifi BIT,
    HasLTE BIT,
    ReleaseDate DATE,
    Price DECIMAL(18,4),
    VideoCard NVARCHAR(50)
);

SELECT *  FROM TutorialAppSchema.Computer

INSERT INTO TutorialAppSchema.Computer(
             Motherboard,
            HasWifi,
            HasLTE,
            CPUCores,
            ReleaseDate,
            Price,
            VideoCard
        ) VALUES (
            'Z690', 'True', 'False', '16', '2023-11-13','987.786','Intel Corei9' )